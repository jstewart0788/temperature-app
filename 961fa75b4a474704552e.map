{"version":3,"sources":["/Users/gwyn/Documents/fau/temperature-app/Temperature/index.js","/Users/gwyn/Documents/fau/temperature-app/Fan/index.js","/Users/gwyn/Documents/fau/temperature-app/Settings/index.js","/Users/gwyn/Documents/fau/temperature-app/App.js","/Users/gwyn/Documents/fau/temperature-app/register-service-worker.js"],"names":["Temperature","props","useState","temp","setTemp","error","setError","navigate","navigation","useEffect","a","async","fetch","response","status","json","toFixed","fetchTemp","View","style","styles","container","tempView","Text","titleText","ActivityIndicator","size","color","temperature","Button","title","onPress","navigationOptions","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","Fan","fan","setFan","console","log","fetchFan","Switch","value","onValueChange","method","headers","Accept","body","JSON","stringify","postFanValue","switch","marginTop","transform","scaleX","scaleY","Settings","onTemp","setOnTemp","loading","setLoading","success","setSuccess","turnOn","fetchTurnOn","turnSuccessOff","postTurnOn","setTimeout","TextInput","height","width","padding","margin","onChangeText","text","successText","AppNavigator","createStackNavigator","initialRouteName","defaultNavigationOptions","headerStyle","headerTintColor","headerTitleStyle","fontWeight","App","createAppContainer","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch"],"mappings":"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","file":"static/js/app.c1ce17dd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, ActivityIndicator, Button } from \"react-native\";\n\nfunction Temperature(props) {\n  const [temp, setTemp] = useState(null);\n  const [error, setError] = useState(false);\n  const { navigate } = props.navigation;\n  useEffect(() => {\n    async function fetchTemp() {\n      try {\n        const response = await fetch(\n          \"https://stark-eyrie-31043.herokuapp.com/api/temperature\"\n        );\n        if (response.status >= 400) throw \"Error Fetching Data!\";\n        let { temp } = await response.json();\n        temp = (temp / 1000 * 9 / 5 + 32).toFixed(1);\n        setTemp(temp);\n      } catch (error) {\n        setError(true);\n      }\n    }\n    fetchTemp();\n  }, []);\n  return (\n    <View style={styles.container}>\n      <View style={styles.tempView}>\n        <Text style={styles.titleText}>What's the Temperature?</Text>\n        {!temp && !error && <ActivityIndicator size=\"large\" color=\"#fff\" />}\n        {temp && (\n          <Text style={styles.temperature}>{temp}</Text>\n        )}\n        {error && <Text style={styles.error}>Error . . .</Text>}\n      </View>\n      <View>\n        <Button\n          color=\"#f4511e\"\n          title=\"Fan\"\n          onPress={() => navigate(\"Fan\")}\n        />\n        <Button\n          color=\"#f4511e\"\n          title=\"Settings\"\n          onPress={() => navigate(\"Settings\")}\n        />\n      </View>\n    </View>\n  );\n}\n\nTemperature.navigationOptions = {\n  title: 'Temperature',\n};\n\nexport default Temperature;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#950C0C\",\n    color: \"#FFF\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\"\n  },\n  tempView: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  titleText: {\n    color: \"#FFF\",\n    fontSize: 30\n  },\n  temperature: {\n    color: \"#FFF\",\n    fontSize: 150\n  }\n});\n","import React, { useState, useEffect } from \"react\";\nimport { ActivityIndicator, Button, StyleSheet, View, Switch, Text } from 'react-native';\n\nconst Fan = (props) => {\n\n  const [fan, setFan] = useState(null);\n  const [error, setError] = useState(false);\n  const { navigate } = props.navigation;\n\n  useEffect(() => {\n    async function fetchFan() {\n      try {\n        const response = await fetch(\n          \"https://stark-eyrie-31043.herokuapp.com/api/fan\"\n        );\n        if (response.status >= 400) throw \"Error Fetching Data!\";\n        const { fan } = await response.json();\n        console.log(fan)\n        setFan(fan);\n      } catch (error) {\n        setError(true);\n      }\n    }\n    fetchFan();\n  }, []);\n\n  const toggleFan = () => {\n    postFanValue(!fan);\n    setFan(!fan);\n  }\n\n  function postFanValue(fan) {\n    try {\n      fetch(\n        'https://stark-eyrie-31043.herokuapp.com/api/fan', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ fan }),\n        }\n      );\n      console.log('sucessfully updated')\n    } catch (error) {\n      console.error(error);\n      setError(true);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.tempView}>\n        <Text style={styles.titleText}>Toggle fan. . .</Text>\n        {typeof fan !== \"boolean\" && !error && <ActivityIndicator size=\"large\" color=\"#fff\" />}\n        {typeof fan === \"boolean\" && (\n          <Switch\n            value={fan}\n            onValueChange={toggleFan}\n            style={styles.switch}\n          />\n        )}\n        {error && <Text style={styles.error}>Error . . .</Text>}\n      </View>\n      <Button\n        color=\"#f4511e\"\n        title=\"Main Menu\"\n        onPress={() => navigate(\"Temperature\")}\n      />\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#950C0C\",\n    color: \"#FFF\",\n    justifyContent: \"center\"\n  },\n  titleText: {\n    color: \"#FFF\",\n    fontSize: 50\n  },\n  tempView: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  switch: {\n    marginTop: 60,\n    transform: [{ scaleX: 3 }, { scaleY: 3 }]\n  }\n});\n\nFan.navigationOptions = {\n  title: 'Fan',\n};\n\n\nexport default Fan;\n","import React, { useState, useEffect } from \"react\";\nimport { ActivityIndicator, Button, StyleSheet, View, Text, TextInput } from 'react-native';\n\nfunction Settings(props) {\n  const [onTemp, setOnTemp] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const { navigate } = props.navigation;\n\n  useEffect(() => {\n    async function fetchTurnOn() {\n      try {\n        const response = await fetch(\n          \"https://stark-eyrie-31043.herokuapp.com/api/turnon\"\n        );\n        if (response.status >= 400) throw \"Error Fetching Data!\";\n        let { turnOn } = await response.json();\n        turnOn = (turnOn / 1000 * 9 / 5 + 32).toFixed(1);\n        setOnTemp(turnOn);\n      } catch (error) {\n        setError(true);\n      }\n    }\n    fetchTurnOn();\n  }, []);\n\n  const submitTurnOn = () => {\n    postTurnOn((onTemp - 32) * 5 / 9 * 1000);\n    setOnTemp(onTemp)\n  }\n\n  const turnSuccessOff = () => {\n    setSuccess(false);\n  }\n\n  const postTurnOn = async (turnOn) => {\n    try {\n      setLoading(true);\n      await fetch(\n        'https://stark-eyrie-31043.herokuapp.com/api/turnon', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ turnOn }),\n        }\n      );\n      setLoading(false);\n      setSuccess(true);\n      setTimeout(turnSuccessOff, 3000);\n      console.log('sucessfully updated')\n    } catch (error) {\n      setLoading(false);\n      console.error(error);\n      setError(true);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.tempView}>\n        <Text style={styles.titleText}>Set temperature breakpoint:</Text>\n        <Text style={styles.titleText} >Turn on at. . .</Text>\n        {((onTemp === null && !error) || loading) && <ActivityIndicator size=\"large\" color=\"#fff\" />}\n        {onTemp !== null && !loading && (\n          <>\n            <TextInput\n              style={{ height: 40, width: 100, backgroundColor: \"#FFF\", padding: 8, margin: 16 }}\n              onChangeText={(text) => setOnTemp(text)}\n              value={`${onTemp}`}\n            />\n            <Button\n              title=\"Submit\"\n              onPress={submitTurnOn}\n            />\n            {success && <Text style={styles.successText} >Successfully set</Text>}\n\n          </>\n        )}\n        {error && <Text style={styles.error}>Error . . .</Text>}\n      </View>\n      <Button\n        color=\"#f4511e\"\n        title=\"Main Menu\"\n        onPress={() => navigate(\"Temperature\")}\n      />\n    </View>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#950C0C\",\n    color: \"#FFF\",\n    justifyContent: \"center\"\n  },\n  titleText: {\n    color: \"#FFF\",\n    fontSize: 25\n  },\n  successText:{\n    color: \"green\",\n    fontSize: 15\n  },\n  tempView: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n});\n\nSettings.navigationOptions = {\n  title: 'Settings',\n};\n\n\nexport default Settings;\n","import { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport Temperature from './Temperature';\nimport Fan from './Fan';\nimport Settings from './Settings';\n\n\nconst AppNavigator = createStackNavigator(\n  {\n    Temperature,\n    Fan,\n    Settings\n  },\n  {\n    initialRouteName: 'Temperature',\n    defaultNavigationOptions: {\n      headerStyle: {\n        backgroundColor: '#f4511e',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    },\n  }\n);\n\nconst App = createAppContainer(AppNavigator);\n\nexport default App;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}